---
- name: Install tomcat
  become: yes
  hosts: appserver
  vars:
    - username: tomcat
    - home_dir: /opt/tomcat
    - default_shell: /bin/false 
    - tomcat_version: 9.0.78
    - tomcat_latest: /opt/tomcat/latest
    - tomcat_bin_folder: /opt/tomcat/latest/bin/
  tasks:
    - name: update apt repo and cache
      apt:
       update_cache: yes
      when: ansible_facts['os_family'] == "Debian"
    - name: install openjdk 11
      package:
        name: "{{ java_package }}"
        state: present
    - name: create tomcat user
      ansible.builtin.user:
        create_home: yes
        home: "{{ home_dir }}"
        name: "{{ username }}"
        shell: "{{ default_shell }}"
        state: present
      when: ansible_facts['os_family'] == "Debian"  
    - name: download tomcat
      ansible.builtin.get_url:
        url: "https://dlcdn.apache.org/tomcat/tomcat-9/v{{tomcat_version}}/bin/apache-tomcat-{{tomcat_version}}.tar.gz"
        dest: "/tmp/apache-tomcat-{{tomcat_version}}.tar.gz"
      when: ansible_facts['os_family'] == "Debian"
    - name: Extract tomcat  
      ansible.builtin.unarchive:
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ home_dir }}"
        creates: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
        group: "{{ username }}"
        owner: "{{ username }}"
        remote_src: yes
      when: ansible_facts['os_family'] == "Debian"
    - name: ctrate symlink  
      ansible.builtin.file:
        src: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ tomcat_latest }}"
        group: "{{ username }}"
        owner: "{{ username }}"
        state: link
      when: ansible_facts['os_family'] == "Debian" 
    - name: change the ownership to tomcat user
      ansible.builtin.file:
        path: "{{ home_dir }}"
        state: directory
        recurse: yes
        group: "{{ username }}"
        owner: "{{ username }}"
      when: ansible_facts['os_family'] == "Debian"
    - name: find the .sh file in bin directory
      ansible.builtin.find:
        paths: "{{ tomcat_bin_folder }}"
        patterns: "*.sh"
      when: ansible_facts['os_family'] == "Debian" 
      register: sh_files_tomcat_bin
    - name: print the files from previous
      debug:
        var: sh_files_tomcat_bin
      when: ansible_facts['os_family'] == "Debian"    
    - name: make shell script executable
      ansible.builtin.file:    
        path: '{{ item.path }}'
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0755'
      loops: "{{ sh_files_tomcat_bin.files }}"  
      when: ansible_facts['os_family'] == "Debian"   


        

      

        
